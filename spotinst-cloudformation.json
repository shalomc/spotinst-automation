{
   "AWSTemplateFormatVersion": "2010-09-09",
   "Description" : "Template used to create IAM policies for Spotinst access authorization. To execute via the CLI save this template file on your hard drive and run this command:  aws cloudformation create-stack --stack-name Spotinst --template-body file://spotinst-cloudformation.json --parameters ParameterKey=ExternalID,ParameterValue=<value-from-Spotinst-console>",
  "Parameters" : {
      
    "ExternalID": {
      "Default": "922761411349_ext",
      "Description" : "Enter the External Id from the Spotinst console",
      "Type": "String",
      "MinLength": "16",
      "MaxLength": "40"
    }
	}, 
	
   "Resources": 
  { "Policy": {
			"Type": "AWS::IAM::ManagedPolicy",
			"Properties": {
			  "Description": "Policy for giving Spotinst the correct permissions",
			  "Path": "/",
			  "PolicyDocument": 
				{
				  "Version": "2012-10-17",
				  "Statement": [
					{
					  "Sid": "Stmt1437894762000",
					  "Effect": "Allow",
					  "Action": [
						"ec2:RequestSpotInstances",
						"ec2:CancelSpotInstanceRequests",
						"ec2:CreateSpotDatafeedSubscription",
						"ec2:Describe*",
						"ec2:AssociateAddress",
						"ec2:AttachVolume",
						"ec2:ConfirmProductInstance",
						"ec2:CopyImage",
						"ec2:CopySnapshot",
						"ec2:CreateImage",
						"ec2:CreateSnapshot",
						"ec2:CreateTags",
						"ec2:CreateVolume",
						"ec2:DeleteTags",
						"ec2:DisassociateAddress",
						"ec2:ModifyImageAttribute",
						"ec2:ModifyInstanceAttribute",
						"ec2:MonitorInstances",
						"ec2:RebootInstances",
						"ec2:RegisterImage",
						"ec2:RunInstances",
						"ec2:StartInstances",
						"ec2:StopInstances",
						"ec2:TerminateInstances",
						"ec2:UnassignPrivateIpAddresses",
						"ec2:DeregisterImage",
						"ec2:DeleteSnapshot",
						"s3:CreateBucket",
						"s3:GetObject",
						"cloudformation:ListStackResources",
						"elasticloadbalancing:Describe*",
						"elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
						"elasticloadbalancing:RegisterInstancesWithLoadBalancer",
						"elasticloadbalancing:RemoveTags",
						"cloudwatch:DescribeAlarmHistory",
						"cloudwatch:DescribeAlarms",
						"cloudwatch:DescribeAlarmsForMetric",
						"cloudwatch:GetMetricStatistics",
						"cloudwatch:ListMetrics",
						"sns:Publish",
						"sns:ListTopics",
						"iam:AddRoleToInstanceProfile",
						"iam:ListInstanceProfiles",
						"iam:ListInstanceProfilesForRole",
						"iam:PassRole",
						"iam:ListRoles",
						"elasticbeanstalk:Describe*",
						"elasticbeanstalk:RequestEnvironmentInfo",
						"elasticbeanstalk:RetrieveEnvironmentInfo",
						"elasticbeanstalk:ValidateConfigurationSettings",
						"autoscaling:Describe*",
						"elasticmapreduce:*"
					  ],
					  "Resource": [
						"*"
					  ]
					}
				  ]
				}
    }
  }, 
        "Role": {
         "Type": "AWS::IAM::Role",
         "Properties": {
            "AssumeRolePolicyDocument": {
				  "Version": "2012-10-17",
				  "Statement": {
					"Effect": "Allow",
					"Principal": { "AWS": "arn:aws:iam::922761411349:root" },
					"Action": "sts:AssumeRole",
					"Condition": { 
						"Bool": { "aws:MultiFactorAuthPresent": "false" } ,	
						"StringEquals": {"sts:ExternalId": {"Ref" : "ExternalID"} }	
						}
				}
			},
            "Path": "/",
			"ManagedPolicyArns": [ { "Ref": "Policy" } ]
		}
	}
 }, 
 
   "Outputs" : {
    "RoleARN" : {
      "Description" : "ARN for new role",
      "Value" :  {  "Fn::GetAtt" : [ "Role", "Arn" ] }    
    }
  }
 }
 